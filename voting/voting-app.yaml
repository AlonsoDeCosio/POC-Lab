---
apiVersion: v1
kind: Namespace
metadata:
  name: voting-app
  
# Redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
  namespace: voting-app
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
status:
  loadBalancer: {}

# Postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db
  name: db
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - image: postgres:9.4
        name: db
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - containerPort: 5432
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db
  namespace: voting-app
spec:
  type: NodePort
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
    nodePort: 32090
status:
  loadBalancer: {}

# Voting-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: voting-app
  name: voting-app
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voting-app
  template:
    metadata:
      labels:
        app: voting-app
    spec:
      containers:
      - image: alonsodecosio/poc-lab-voting-app
        name: voting-app
        ports:
          - containerPort: 80
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: voting-app
  name: voting-app
  namespace: voting-app
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32080
  selector:
    app: voting-app

# Worker app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: worker-app
  name: worker-app
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-app
  template:
    metadata:
      labels:
        app: worker-app
    spec:
      containers:
      - image: alonsodecosio/poc-lab-worker-app
        name: worker-app
        ports:
          - containerPort: 80
        resources: {}

# Result app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: result-app
  name: result-app
  namespace: voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result-app
  template:
    metadata:
      labels:
        app: result-app
    spec:
      containers:
      - image: alonsodecosio/poc-lab-result-app
        name: result-app
        ports:
          - containerPort: 80
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: result-app
  name: result-app
  namespace: voting-app
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32081
  selector:
    app: result-app

